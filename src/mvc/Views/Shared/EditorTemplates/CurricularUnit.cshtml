@using mvc.Models.Repository
@using mvc.Models.Entities
@model CurricularUnit

    <div class="clearfix"> @Html.LabelFor(m => m.Key, "Acrónimo") <div> @Html.EditorFor(m => m.Key) @Html.ValidationMessageFor(m => m.Key) </div> </div>
    <div class="clearfix"> @Html.LabelFor(m => m.Name) <div> @Html.EditorFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name) </div> </div>
    <div class="clearfix"> 
        @Html.LabelFor(m => m.Mandatory) <div>
        @Html.RadioButton("Mandatory", true, Model != null ? Model.Mandatory : false) <text>Obrigatória</text>
        @Html.RadioButton("Mandatory", false, Model != null ? !Model.Mandatory : false) <text>Opcional</text> 
        @Html.ValidationMessageFor(m => m.Mandatory)
        </div>
    </div>
    <div class="clearfix"> @Html.LabelFor(m => m.Ects) <div> @Html.EditorFor(m => m.Ects) @Html.ValidationMessageFor(m => m.Ects) </div> </div>
    <div class="clearfix">
        @Html.LabelFor(m => m.Semester)
        <div class="input">
            @{
                var ul = new List<SelectListItem>();
                for (int i = 0; i < CurricularUnit.Maxsemesters; i++)
                {
                    var li = new SelectListItem(); li.Text = (i + 1).ToString();
                    li.Value = (i + 1).ToString();
                    if (Model != null) 
                    {
                        li.Selected = (Model.Semester[i] != 0) ? true : false;
                    }
                    ul.Add(li);
                }
              }
            @Html.ListBoxFor(mUc => mUc.Semester, ul)
            @Html.ValidationMessageFor(m => m.Semester)
        </div>
    </div>

    <div class="clearfix">
        @Html.LabelFor(m => m.Precedence)
        <div class="input">
            @Html.ListBoxFor(mUC => mUC.Precedence,
                RepositoryLocator.Get<string, CurricularUnit>().GetAll().Select(
                    uc =>
                    {
                        var li = new SelectListItem(); li.Text = uc.Key; li.Value = uc.Key;
                        if (Model != null)
                        {
                            li.Selected = Model.Precedence.Contains(uc.Key);
                        }
                        return li;
                    }))
            @Html.ValidationMessageFor(m => m.Precedence)
        </div>
    </div>

    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Objectives) <div> @Html.EditorFor(m => m.Objectives) @Html.ValidationMessageFor(m => m.Objectives) </div> </div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Assessment) <div> @Html.EditorFor(m => m.Assessment) @Html.ValidationMessageFor(m => m.Assessment) </div></div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Results) <div> @Html.EditorFor(m => m.Results) @Html.ValidationMessageFor(m => m.Results) </div> </div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Program) <div> @Html.EditorFor(m => m.Program) @Html.ValidationMessageFor(m => m.Program) </div> </div>
