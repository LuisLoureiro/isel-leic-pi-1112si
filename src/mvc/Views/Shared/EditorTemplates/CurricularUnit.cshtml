@using mvc.Models.Repository
@using mvc.Models.Entities
@model CurricularUnit

    <div class="clearfix"> <span class="label">Acrónimo:</span> <div> @Html.EditorFor(m => m.Key) </div> </div>
    <div class="clearfix"> <span class="label">Nome:</span> <div> @Html.EditorFor(m => m.Name) </div> </div>
    <div class="clearfix"> 
        <span class="label">Obrigatoriedade:</span> <div>
        @Html.RadioButton("Mandatory", true, Model.Mandatory) <text>Obrigatória</text>
        @Html.RadioButton("Mandatory", false, !Model.Mandatory) <text>Opcional</text> </div>
    </div>
    <div class="clearfix"> <span class="label">Créditos:</span> <div> @Html.EditorFor(m => m.Ects) </div> </div>
    <div class="clearfix">
        <span class="label">Semestre(s) Curricular(es):</span>
        <div class="input">
            @{
                var ul = new List<SelectListItem>();
                for (int i = 0; i < CurricularUnit.Maxsemesters; i++)
                {
                    var li = new SelectListItem(); li.Text = (i + 1).ToString();
                    li.Value = (i + 1).ToString();
                    li.Selected = ((Model.Semester & (0x1 << i)) == (0x1 << i)) ? true : false;
                    ul.Add(li);
                }
              }
            @Html.ListBoxFor(mUc => mUc.Semester, ul)
        @*<select class="medium" size="4" multiple="multiple" name="Semester">
            @for (int i = 0; i < CurricularUnit.Maxsemesters; i++)
            {
                if ((Model.Semester & (0x1 << i)) == (0x1 << i))
                { 
                    <option selected="selected">@(i + 1)</option>
                }
                else
                {
                    <option>@(i + 1)</option>
                }
            }
        </select>*@
        </div>
    </div>

    <div class="clearfix">
        <span class="label">Pré-Requisito(s):</span>
        <div class="input">
            @Html.ListBoxFor(mUC => mUC.Key, 
                RepositoryLocator.Get<string, CurricularUnit>().GetAll().Select(
                    uc => {
                        var li = new SelectListItem(); li.Text = uc.Key; li.Value = uc.Key; 
                        li.Selected = Model.Precedence.Contains<CurricularUnit>(uc);
                        return li;
                    }))
        </div>
    </div>

    <div class="clearfix span12"> <span class="label">Objectivos:</span> <p>@Html.EditorFor(m => m.Objectives)</p></div>
    <div class="clearfix span12"> <span class="label">Resultados da Aprendizagem:</span> <p>@Html.EditorFor(m => m.Assessment)</p></div>
    <div class="clearfix span12"> <span class="label">Avaliação dos Resultados:</span> <p>@Html.EditorFor(m => m.Results)</p></div>
    <div class="clearfix span12"> <span class="label">Programa Resumido:</span> <p>@Html.EditorFor(m => m.Program)</p></div>
