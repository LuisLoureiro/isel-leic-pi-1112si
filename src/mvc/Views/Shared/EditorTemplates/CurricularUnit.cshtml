@using System.Globalization
@model CurricularUnit

    <div class="clearfix"> @Html.LabelFor(m => m.Key, "Acrónimo") @Html.EditorFor(m => m.Key) @Html.ValidationMessageFor(m => m.Key) </div>
    <div class="clearfix"> @Html.LabelFor(m => m.Name) @Html.EditorFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name) </div>
    <div class="clearfix"> 
        @Html.LabelFor(m => m.Mandatory) 
        @Html.RadioButton("Mandatory", true, Model != null && Model.Mandatory) Obrigatória
        @Html.RadioButton("Mandatory", false, Model != null && !Model.Mandatory) Opcional
        @Html.ValidationMessageFor(m => m.Mandatory)
    </div>
    <div class="clearfix"> @Html.LabelFor(m => m.Ects) @Html.EditorFor(m => m.Ects) @Html.ValidationMessageFor(m => m.Ects) </div>
    <div class="clearfix">
        @Html.LabelFor(m => m.Semester)
        @{
            var ul = new List<SelectListItem>();
            for (int i = 0; i < CurricularUnit.Maxsemesters; i++)
            {
                ul.Add(new SelectListItem {
                    Text = (i + 1).ToString(CultureInfo.InvariantCulture), 
                    Value = (i + 1).ToString(CultureInfo.InvariantCulture), 
                    Selected = (Model != null && Model.Semester.Contains(i + 1))
                });
            }
         }
        @Html.ListBoxFor(m => m.Semester, ul)
        @Html.ValidationMessageFor(m => m.Semester)
    </div>

    <div class="clearfix">
        @Html.LabelFor(m => m.Precedence)
        @Html.ListBoxFor(mUc => mUc.Precedence,
            mvc.Models.Repository.RepositoryLocator.Get<string, CurricularUnit>().GetAll()
                // falta impedir que UCs com semestre curricular superior apareçam.
                .Where(uc => (Model == null || !uc.Key.Equals(Model.Key)))
                .Select(
                    uc => new SelectListItem
                        {
                            Text = uc.Key,
                            Value = uc.Key,
                            Selected = (Model != null && Model.Precedence.Contains(uc.Key))
                        }
                    ))
    </div>

    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Objectives) @Html.EditorFor(m => m.Objectives) @Html.ValidationMessageFor(m => m.Objectives) </div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Assessment) @Html.EditorFor(m => m.Assessment) @Html.ValidationMessageFor(m => m.Assessment) </div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Results) @Html.EditorFor(m => m.Results) @Html.ValidationMessageFor(m => m.Results) </div>
    <div class="clearfix span12"> 
        @Html.LabelFor(m => m.Program) @Html.EditorFor(m => m.Program) @Html.ValidationMessageFor(m => m.Program) </div>
