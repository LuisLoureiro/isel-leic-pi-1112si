<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/docs.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/modernizr-1.7.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/li51ng08.js")" type="text/javascript"></script>
    @*
        Através da função jQuery bind, que utiliza DOM level 2, é associado um handler(função) ao evento de "submit" 
        para todos os "forms" que existirem no documento HTML. Assim consegue-se validar os formulários
        do lado do cliente recorrendo a javascript e de forma não intrusiva.
        Em situações em que se encontrem presentes vários formulários e por forma a que apenas seja validado
        o formulário pretendido, é passado o elemento DOM sobre o qual foi despoletado o evento de "submit".
        Por exemplo, na vista Account/Index aquando da remoção da conta, se o formulário com os dados pessoais
        não estivesse "bem preenchido", não era possível remover, pois este formulário também era validado.
    *@
    <script type="text/javascript">
        $(document).ready(function () {
            $("form").bind("submit", function () { return utils.validateForm(this); });
            utils.setFocus();
            utils.bindConfirmationMessageOnSubmit();
            utils.disableAndOnChangeEnableSubmit();
            utils.ajaxSearch($("[type=search]"));
            utils.ajaxPagination();
        });
    </script>
</head>

<body>
    <div class="topbar">
      <div class="topbar-inner">
        <div class="container">
          <a class="brand" href="/">PI | S1112I | LI51N-G08</a>

          
          <ul class="secondary-nav">
            <li>
                @using(Html.BeginForm("Search", "Home", FormMethod.Get)){
                    <input class="span3" type="search" autocomplete="false" placeholder="Pesquisar" name="search" />
                    <div id="suggestions">
                        <table>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                }
            </li>
          @{
              if (User.Identity.IsAuthenticated)
              {
                  <li>@Html.ActionLink(MvcNotMembershipProvider.GetUser(User.Identity.Name).Name, "Index", "Account")</li>
                  <li>@Html.ActionLink("Sair", "LogOff", "Account")</li>
              }
              else if (!(Request.Path.Equals("/") || Request.Path.ToLower().Equals("/home/index") || Request.Path.ToLower().Equals("/account/logon")))
              {
                  <li>@Html.ActionLink("Efectuar Login", "LogOn", "Account", new { returnUrl = Request.RawUrl }, null)</li>
              }
              else
              {
                  <li>@Html.ActionLink("Efectuar Login", "LogOn", "Account")</li>
              }
          }
          </ul>
        </div>
      </div>
    </div>

    <div>
        @if (TempData["message"] != null)
        { 
            <div class="span12 alert-message success">@TempData["message"]</div>
        }
        @if (TempData["exception"] != null)
        { 
            <div class="span12 alert-message warning">@TempData["exception"]</div>
        }
        @RenderBody()
    </div>

    <footer class="footer">
        <div class="container">
            Desenvolvido e desenhado por <strong>Ricardo Andrade (27226)</strong> e <strong>Luís Loureiro (32186)</strong>
        </div>
    </footer>
</body>
</html>
